{"version":3,"file":"static/js/50.132cfba7.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContacrForm.styled.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  text-shadow: ${({ theme: { colors } }) => colors.textShadowLight};\n  @media screen and (min-width: 768px) {\n    margin: 0px auto 20px 0px;\n    \n    font-size: 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    margin: 0px auto 10px 80px;\n    font-size: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  text-shadow: ${({ theme: { colors } }) => colors.textShadowDark};\n  @media screen and (min-width: 1200px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ContactsContainer = styled.div`\n  margin-top: 20px;\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  padding: 15px;\n  text-align: center;\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  @media screen and (min-width: 768px) {\n    min-width: 420px;\n    margin: 20px auto 0px 0px;\n  }\n  @media screen and (min-width: 1200px) {\n    min-width: 600px;\n  }\n`;\n\nexport const AmountContacts = styled.p`\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const EmptyText = styled.p`\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst showUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  @media screen and (min-width: 768px) {\n    margin: 0px auto 0px 0px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n    margin-left: 50px;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 230px;\n  padding: 5px 8px;\n  outline: none;\n  border: 2px solid ${({ theme: { colors } }) => colors.border};\n  background-color: transparent;\n  border-radius: 20px;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 0 0 5px ${({ theme: { colors } }) => colors.border};\n  }\n  :focus {\n    box-shadow: inset 0 0 10px ${({ theme: { colors } }) => colors.inputShadow};\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    padding: 5px 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  padding-left: 15px;\n  margin-bottom: 5px;\n  font-size: 18px;\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  border: 1px solid ${({ theme: { colors } }) => colors.buttonShadow};\n  border-radius: 35px;\n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 600;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms linear, transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n    box-shadow: ${({ theme: { colors } }) => colors.buttonShadowHover} 0px 0px\n      5px 2px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n    padding: 8px 15px;\n  }\n`;\n\nexport const ErrorMessageStyle = styled.div`\n  width: 230px;\n  text-align: center;\n  color: ${({ theme: { colors } }) => colors.red};\n  animation: ${showUp} 400ms ease-in-out;\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    font-size: 18px;\n  }\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Container } from 'components/App/App.styled';\nimport {\n  Button,\n  ErrorMessageStyle,\n  FormStyle,\n  InputGroup,\n  InputLabel,\n  Input,\n} from 'components/ContactForm/ContacrForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { MdAppRegistration } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { registerAuth } from 'redux/Auth/operationsAuth';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(\"Ім'я обов'язкове!\"),\n  email: yup\n    .string()\n    .email(\n      \"Пошта латиницею, має містити @ та текст після\"\n    )\n    .required(\"Пошта обов'язкова!\"),\n  password: yup\n    .string()\n    .required(\"Пароль обов'язковий!\")\n    .min(7, 'Пароль має бути не менше 7 цифр')\n    .max(12, 'Пароль не повинен перевищувати 12 цифр'),\n});\n\nconst nameId = nanoid();\nconst passwordId = nanoid();\nconst emailId = nanoid();\n\nexport default function RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n\n  const onSubmit = ({name, email, password}) => {\n    const dataRegister = {name, email, password};\n    dispatch(registerAuth(dataRegister))\n    reset();\n  };\n\n  return (\n    <Container >\n      <FormStyle onSubmit={handleSubmit(onSubmit)}>\n        <InputGroup>\n          <InputLabel htmlFor={nameId}>Ім'я / Нік</InputLabel>\n          <Input\n            {...register('name')}\n            type=\"text\"\n            name=\"name\"\n            id={nameId}\n            title=\"Ім'я може містити літери та цифри, апостроф, тире та пробіли. Наприклад Адріан, Мерсер2, д'Артаньян\"\n          />\n          {errors.name && (\n            <ErrorMessageStyle>{errors.name?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <InputGroup>\n          <InputLabel htmlFor={emailId}>Пошта</InputLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id={emailId}\n            {...register('email')}\n            title=\"Пошта обов'язково латиницею, має містити @ та текст після.\"\n          />\n          {errors.email && (\n            <ErrorMessageStyle>{errors.email?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <InputGroup>\n          <InputLabel htmlFor={passwordId}>Пароль</InputLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id={passwordId}\n            {...register('password')}\n            title=\"Пароль має складатись від 7 до 12 символів\"\n          />\n          {errors.password && (\n            <ErrorMessageStyle>{errors.password?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <Button type=\"submit\">\n          Зареєструвати\n          <MdAppRegistration />\n        </Button>\n      </FormStyle>\n    </Container>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","MainTitle","_templateObject2","_ref","theme","colors","textShadowLight","Title","_templateObject3","_ref2","textShadowDark","ContactsContainer","_templateObject4","_ref3","bgAlfa","_ref4","shadow","AmountContacts","_templateObject5","EmptyText","_templateObject6","showUp","keyframes","FormStyle","InputGroup","Input","border","text","_ref5","_ref6","inputShadow","InputLabel","Button","_ref7","_ref8","buttonShadow","_ref9","_ref10","buttonShadowHover","ErrorMessageStyle","_templateObject7","_ref11","red","schema","yup","shape","name","required","email","password","min","max","nameId","nanoid","passwordId","emailId","RegisterPage","_errors$name","_errors$email","_errors$password","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","dataRegister","registerAuth","htmlFor","_objectSpread","type","id","title","message","MdAppRegistration"],"sourceRoot":""}