{"version":3,"file":"static/js/781.c8d9262c.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContacrForm.styled.jsx","pages/RegisterPage.styled.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  text-shadow: ${({ theme: { colors } }) => colors.textShadowDark};\n  @media screen and (min-width: 1200px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ContactsContainer = styled.div`\n  margin-top: 20px;\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  padding: 15px;\n  text-align: center;\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  @media screen and (min-width: 768px) {\n    min-width: 420px;\n    margin: 20px auto 0px 0px;\n  }\n  @media screen and (min-width: 1200px) {\n    min-width: 600px;\n  }\n`;\n\nexport const AmountContacts = styled.p`\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const EmptyText = styled.p`\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst showUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  @media screen and (min-width: 768px) {\n    margin: 0px auto 0px 0px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n    margin-left: 50px;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 230px;\n  padding: 5px 8px;\n  outline: none;\n  border: 2px solid ${({ theme: { colors } }) => colors.border};\n  background-color: transparent;\n  border-radius: 20px;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 0 0 5px ${({ theme: { colors } }) => colors.border};\n  }\n  :focus {\n    box-shadow: inset 0 0 10px ${({ theme: { colors } }) => colors.inputShadow};\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    padding: 5px 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  padding-left: 15px;\n  margin-bottom: 5px;\n  font-size: 18px;\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  border: 1px solid ${({ theme: { colors } }) => colors.buttonShadow};\n  border-radius: 35px;\n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 600;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms linear, transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n    box-shadow: ${({ theme: { colors } }) => colors.buttonShadowHover} 0px 0px\n      5px 2px;\n  }\n  svg {\n    width: 25px;\n    height: 25px;\n    margin-left: 10px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n    padding: 8px 15px;\n  }\n`;\n\nexport const ErrorMessageStyle = styled.div`\n  width: 230px;\n  text-align: center;\n  color: ${({ theme: { colors } }) => colors.red};\n  animation: ${showUp} 400ms ease-in-out;\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    font-size: 18px;\n  }\n`;\n","import { Container } from 'components/App/App.styled';\nimport styled, { keyframes } from 'styled-components';\n\nconst slideIn = keyframes` from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0);\n  }`;\n\nexport const ContainerRegisterPage = styled(Container)`\n  animation: ${slideIn} 0.35s ease-out forwards;\n  transform: translateY(100%);\n  min-height: calc(100lvh - 170px);\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyle,\n  FormStyle,\n  InputGroup,\n  InputLabel,\n  Input,\n} from 'components/ContactForm/ContacrForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { MdAppRegistration } from 'react-icons/md';\nimport { useDispatch } from 'react-redux';\nimport { registerAuth } from 'redux/Auth/operationsAuth';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContainerRegisterPage } from './RegisterPage.styled';\nimport { Title } from 'components/App/App.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(\"Ім'я обов'язкове!\"),\n  email: yup\n    .string()\n    .email('Пошта латиницею, має містити @ та текст після')\n    .required(\"Пошта обов'язкова!\"),\n  password: yup\n    .string()\n    .required(\"Пароль обов'язковий!\")\n    .min(7, 'Пароль має бути не менше 7 цифр')\n    .max(12, 'Пароль не повинен перевищувати 12 цифр'),\n});\n\nconst nameId = nanoid();\nconst passwordId = nanoid();\nconst emailId = nanoid();\n\nexport default function RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, email, password }) => {\n    const dataRegister = { name, email, password };\n    dispatch(registerAuth(dataRegister))\n      .unwrap()\n      .then(({ user: { name } }) => {\n        reset();\n        return toast.success(\n          `Вітаємо, ${name} у твоїй особистій телефонній книзі.`\n        );\n      })\n      .catch(() =>\n        toast.error(\n          'Упс. Сталась помилка. Перевірте чи всі дані введено вірно або Ви вже зараєстровані.🙄'\n        )\n      );\n  };\n\n  return (\n    <ContainerRegisterPage>\n      <FormStyle onSubmit={handleSubmit(onSubmit)}>\n        <Title>Реєстрація</Title>\n        <InputGroup>\n          <InputLabel htmlFor={nameId}>Ім'я / Нік</InputLabel>\n          <Input\n            {...register('name')}\n            type=\"text\"\n            name=\"name\"\n            id={nameId}\n            title=\"Ім'я може містити літери та цифри, апостроф, тире та пробіли. Наприклад: Адріан, Мерсер2, д'Артаньян\"\n          />\n          {errors.name && (\n            <ErrorMessageStyle>{errors.name?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <InputGroup>\n          <InputLabel htmlFor={emailId}>Пошта</InputLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id={emailId}\n            {...register('email')}\n            title=\"Пошта обов'язково латиницею, має містити @ та текст після. Наприклад: poshta@gameil.com\"\n          />\n          {errors.email && (\n            <ErrorMessageStyle>{errors.email?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <InputGroup>\n          <InputLabel htmlFor={passwordId}>Пароль</InputLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id={passwordId}\n            {...register('password')}\n            title=\"Пароль має складатись від 7 до 12 символів\"\n          />\n          {errors.password && (\n            <ErrorMessageStyle>{errors.password?.message}</ErrorMessageStyle>\n          )}\n        </InputGroup>\n        <Button type=\"submit\">\n          Зареєструвати\n          <MdAppRegistration />\n        </Button>\n      </FormStyle>\n    </ContainerRegisterPage>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","_ref","theme","colors","textShadowDark","ContactsContainer","_templateObject3","_ref2","bgAlfa","_ref3","shadow","AmountContacts","_templateObject4","EmptyText","_templateObject5","showUp","keyframes","FormStyle","InputGroup","Input","border","_ref4","text","_ref5","_ref6","inputShadow","InputLabel","Button","_templateObject6","_ref7","_ref8","buttonShadow","_ref9","_ref10","buttonShadowHover","ErrorMessageStyle","_templateObject7","_ref11","red","slideIn","ContainerRegisterPage","schema","yup","shape","name","required","email","password","min","max","nameId","nanoid","passwordId","emailId","RegisterPage","_errors$name","_errors$email","_errors$password","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","dataRegister","registerAuth","unwrap","then","user","toast","concat","catch","htmlFor","_objectSpread","type","id","title","message","MdAppRegistration"],"sourceRoot":""}