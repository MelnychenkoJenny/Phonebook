{"version":3,"file":"static/js/773.1b466b57.chunk.js","mappings":"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","sources":["components/ContactForm/ContacrForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","redux/selectors.js","components/Filter/Filter.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst showUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  @media screen and (min-width: 768px) {\n    margin: 0px auto 0px 0px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 20px;\n    margin-left: 50px;\n  }\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 230px;\n  padding: 5px 8px;\n  outline: none;\n  border: 2px solid ${({ theme: { colors } }) => colors.border};\n  background-color: transparent;\n  border-radius: 20px;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 0 0 5px ${({ theme: { colors } }) => colors.border};\n  }\n  :focus {\n    box-shadow: inset 0 0 10px ${({ theme: { colors } }) => colors.inputShadow};\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    padding: 5px 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const InputLabel = styled.label`\n  padding-left: 15px;\n  margin-bottom: 5px;\n  font-size: 18px;\n  @media screen and (min-width: 1200px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: ${({ theme: { colors } }) => colors.bgAlfa};\n  border: 1px solid ${({ theme: { colors } }) => colors.buttonShadow};\n  border-radius: 35px;\n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 600;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms linear, transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n    box-shadow: ${({ theme: { colors } }) => colors.buttonShadowHover} 0px 0px\n      5px 2px;\n  }\n  svg {\n    width: 25px;\n    height: 25px;\n    margin-left: 10px;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 18px;\n    padding: 8px 15px;\n  }\n`;\n\nexport const ErrorMessageStyle = styled.div`\n  width: 230px;\n  text-align: center;\n  color: ${({ theme: { colors } }) => colors.red};\n  animation: ${showUp} 400ms ease-in-out;\n  @media screen and (min-width: 1200px) {\n    width: 330px;\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport {\n  FormStyle,\n  Input,\n  InputGroup,\n  InputLabel,\n  Button,\n  ErrorMessageStyle,\n} from './ContacrForm.styled';\nimport { toast } from 'react-toastify';\nimport { withHookFormMask } from 'use-mask-input';\nimport {\n  useAddContactsMutation,\n  useFetchContactsQuery,\n} from 'redux/Contacts/contactsApi';\nimport { IoPersonAddOutline } from 'react-icons/io5';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Title } from 'components/App/App.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(\"Ім'я обов'язкове!\"),\n  number: yup\n    .string()\n    .required(\"Номер обов'язковий!\")\n    .min(7, 'Номер має бути не менше 7 цифр'),\n});\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = () => {\n  const { data: contacts = [] } = useFetchContactsQuery();\n  const [addContacts] = useAddContactsMutation();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    addContact(data.name.trim(), data.number);\n\n    const repeatName = contacts.some(\n      el => el.name.toLowerCase() === data.name.trim().toLowerCase()\n    );\n    const repeatNumber = contacts.some(\n      el => el.number.replace(/\\D/g, '') === data.number.replace(/\\D/g, '')\n    );\n    if (repeatName || repeatNumber) {\n      return;\n    }\n\n    reset();\n  };\n  const addContact = (name, number) => {\n    const repeatName = contacts.some(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    const repeatNumber = contacts.some(\n      el => el.number.replace(/\\D/g, '') === number.replace(/\\D/g, '')\n    );\n\n    if (repeatName) {\n      return toast.error(\n        `${name} вже є в контактах. Спробуйте ввести інше ім'я`\n      );\n    } else if (repeatNumber) {\n      return toast.error(\n        `Такий номер ${number} вже є в контактах. Спробуйте ввести інший`\n      );\n    }\n    const contactItem = {\n      createdAt: new Date(),\n      name,\n      number,\n      id: nanoid(),\n    };\n    toast.success('Новий контакт додано');\n    addContacts(contactItem);\n  };\n\n  return (\n    <FormStyle onSubmit={handleSubmit(onSubmit)}>\n      <Title>Створити контакт</Title>\n      <InputGroup>\n        <InputLabel htmlFor={nameId}>Ім'я</InputLabel>\n        <Input\n          {...register('name')}\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain letters and numbers, apostrophe, dash and spaces. For example Adrian, Jacob Mercer2, Charles de Batz de Castelmore d'Artagnan\"\n          // required\n          autoFocus\n          id={nameId}\n        />\n\n        {errors.name && (\n          <ErrorMessageStyle>{errors.name?.message}</ErrorMessageStyle>\n        )}\n      </InputGroup>\n      <InputGroup>\n        <InputLabel htmlFor={numberId}>Телефон</InputLabel>\n        <Input\n        {...withHookFormMask(register('number'), ['+99 (999) 999 99 99'])}\n          // {...register('number')}\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          // required\n          id={numberId}\n        />\n        {errors.number && (\n          <ErrorMessageStyle>{errors.number?.message}</ErrorMessageStyle>\n        )}\n      </InputGroup>\n      <Button type=\"submit\">\n        Додати контакт\n        <IoPersonAddOutline />\n      </Button>\n    </FormStyle>\n  );\n};\n","import { toast } from 'react-toastify';\nimport { useDeleteContactsMutation } from 'redux/Contacts/contactsApi';\nimport { ContactsList, ContactsItem, ButtonDelete, Phone } from './Contacts.styled';\nimport { BiPhoneCall } from 'react-icons/bi';\n\nexport const Contacts = ({ contacts }) => {\n  const [deleteContact] = useDeleteContactsMutation();\n\n  const handleDeleteContact = id => {\n    deleteContact(id);\n    toast.info('Контакт успішно видалено');\n  };\n\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsItem key={id}>\n          <p>{name}</p>\n          \n          <Phone href={`tel:${number}`}><BiPhoneCall/>{number}</Phone>\n\n          <ButtonDelete onClick={() => handleDeleteContact(id)}>\n            Видалити\n          </ButtonDelete>\n        </ContactsItem>\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputGroup = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nexport const Label = styled.label`\n  text-align: center;\n  font-size: 16px;\n  margin-bottom: 5px;\n  @media screen and (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Input = styled.input`\n  margin: 0 auto;\n  width: 250px;\n  padding: 5px 10px;\n  outline: none;\n  border: 2px solid ${({ theme: { colors } }) => colors.border};\n  background-color: transparent;\n  border-radius: 20px;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 0 0 5px ${({ theme: { colors } }) => colors.border};\n  }\n  :focus {\n    box-shadow: inset 0 0 10px ${({ theme: { colors } }) => colors.inputShadow};\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n    padding: 5px 15px;\n    font-size: 18px;\n  }\n`;\n","export const selectContacts = state => state.contacts.array;\nexport const selectFilter = state => state.filter.query;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { InputGroup, Label, Input } from './Filter.styled';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/Filter/filterSlice';\nimport { BsSearchHeart } from 'react-icons/bs';\n\nconst filtrId = nanoid();\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value.trim()));\n  };\n\n  return (\n    <InputGroup>\n      <Label htmlFor={filtrId}>\n        Пошук контактів за іменем <BsSearchHeart />\n      </Label>\n      <Input type=\"text\" name={filter} onChange={changeFilter} id={filtrId} />\n    </InputGroup>\n  );\n};\n","import { Container } from 'components/App/App.styled';\nimport styled, { keyframes } from 'styled-components';\n\nconst slideIn = keyframes` from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0);\n  }`;\n\nexport const ContainerContactsPage = styled(Container)`\n  animation: ${slideIn} 0.35s ease-out forwards;\n  padding-bottom: 100px;\n  transform: translateY(100%);\n`;\n","import {\n  AmountContacts,\n  ContactsContainer,\n  EmptyText,\n  Title,\n} from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm';\nimport { Contacts } from 'components/Contacts';\nimport { Error } from 'components/Error/Error';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/Contacts/contactsApi';\nimport { selectFilter } from 'redux/selectors';\nimport { ContainerContactsPage } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  const {\n    refetch,\n    data: contacts = [],\n    isFetching: isLoading,\n    isLoading: isFirstLoading,\n    error,\n  } = useFetchContactsQuery();\nconsole.log(useFetchContactsQuery())\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  const filter = useSelector(selectFilter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getFilteredContacts();\n\n  return (\n    <ContainerContactsPage>\n      {isLoading && !error && <Loader />}\n\n      <ContactForm />\n      <ContactsContainer>\n        {error ? (\n          <Error>{error}</Error>\n        ) : (\n          <div>\n            <Title>Мої контакти</Title>\n            <AmountContacts>\n              Загальна кількість контактів: {contacts.length}\n            </AmountContacts>\n            <Filter />\n            {visibleContacts.length && !isFirstLoading ? (\n              <Contacts contacts={visibleContacts} />\n            ) : (\n              <EmptyText>Не знайдено жодного контакту</EmptyText>\n            )}\n          </div>\n        )}\n      </ContactsContainer>\n    </ContainerContactsPage>\n  );\n}\n"],"names":["showUp","keyframes","_templateObject","_taggedTemplateLiteral","FormStyle","styled","_templateObject2","_ref","theme","colors","bgAlfa","_ref2","shadow","InputGroup","_templateObject3","Input","_templateObject4","_ref3","border","_ref4","text","_ref5","_ref6","inputShadow","InputLabel","_templateObject5","Button","_templateObject6","_ref7","_ref8","buttonShadow","_ref9","_ref10","buttonShadowHover","ErrorMessageStyle","_templateObject7","_ref11","red","schema","yup","shape","name","required","number","min","nameId","nanoid","numberId","ContactForm","_errors$name","_errors$number","_useFetchContactsQuer2","useFetchContactsQuery","data","contacts","_useAddContactsMutati","useAddContactsMutation","addContacts","_slicedToArray","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","addContact","repeatName","some","el","toLowerCase","repeatNumber","replace","toast","concat","contactItem","createdAt","Date","id","_jsxs","onSubmit","trim","children","_jsx","Title","htmlFor","_objectSpread","type","title","autoFocus","message","withHookFormMask","IoPersonAddOutline","Contacts","_useDeleteContactsMut","useDeleteContactsMutation","deleteContact","ContactsList","map","ContactsItem","Phone","href","BiPhoneCall","ButtonDelete","onClick","handleDeleteContact","Label","selectFilter","state","filter","query","filtrId","Filter","useSelector","dispatch","useDispatch","BsSearchHeart","onChange","event","setFilter","currentTarget","value","slideIn","ContainerContactsPage","Container","ContactsPage","_useFetchContactsQuer","refetch","isLoading","isFetching","isFirstLoading","error","console","log","useEffect","visibleContacts","normalizedFilter","contact","includes","getFilteredContacts","Loader","ContactsContainer","Error","AmountContacts","length","EmptyText"],"sourceRoot":""}